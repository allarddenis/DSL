grammar org.xtext.selenium.eliedenis.EDdsl with org.eclipse.xtext.common.Terminals

generate eDdsl "http://www.xtext.org/selenium/eliedenis/EDdsl"

Test:
	tests=Series
;

// ----- MODELS (ALPHABETICAL ORDER) -----

ActionNoReturn:
	All |
	Browse |
	Check |
	Click | 
	Type |
	VariableSet
;

ActionReturn:
	(
		Count |
		Read
	)
;

ActionBoolReturn:
	(Comparison|Constraint)
;

All:
	'all' operation=ActionNoReturn
;

Attribute:
	'attribute' 	attributeName=STRING attributeValue=STRING
;

Browse:
	'browse' url=STRING
;

Check:
	'check' action=ActionBoolReturn
;

Comparison:
	'comparison' firstVal=Val comparatorOperator=ComparisonOperatorEnum secondVal=Val
;

Constraint:
	readableElement=ReadableEnum constraintType=ConstraintTypeEnum expectedVal=Val parameters=Parameters
;

Count:
	'count' parameters=(Parameters|ActionReturn)
;

Click:
	'click' clickableElement=ClickableEnum parameters=Parameters
;

Operation:
	action=ActionNoReturn ';'
;

Parameter:
	'(' parameter=(Attribute|Value) ')'
;

Parameters:
	parameters+=Parameter*
;

Read:
	'read' readableElement=ReadableEnum parameters=Parameters
;

Series:
	'open' browser=BrowserEnum expectedReturn=BoolEnum ';' operations+=Operation*
;

Type:
	'type' textToType=Val parameters=Parameters
;

Val:
	(VariableGet|STRING|bool=BoolEnum)
;

Value:
	'value' value=Val
;

VariableGet:
	varName=ID
;

VariableSet:
	varName=ID '=' action=ActionReturn
;

// ----- ENUMS -----

enum BoolEnum :
	True = 'true' | False = 'false'
;
enum BrowserEnum : 
	Firefox = 'firefox' | IE = 'ie'
;

enum ClickableEnum : 
	Button = 'button' | Link = 'link' | Input = 'input'
;

enum ComparisonOperatorEnum:
	Equal= '==' | Superior = '>' | Inferior = '<' | SupEqual = '>=' | InfEqual = '<='
;

enum ConstraintTypeEnum:
	Contain = 'contain' | Enabled = 'enabled'
;

enum ReadableEnum:
	Button = 'button' | Link = 'link' | Input = 'input' | H1='h1'
;